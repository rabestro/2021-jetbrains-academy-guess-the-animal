#
# Для форматирования сообщий в программе используется класс java.text.MessageFormat.
# Для правильного форматирования сообщений, просмотрите документацию по этому классу.
# https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/MessageFormat.html
#
# Программа поддерживает вариативность сообщений. Для их разделения используется символ \f (form feed).
#

welcome = Тебя приветствует эксперт по животным!

# Приветствия

# Общие приветствия. Могут быть использованны в любое время.

greeting = Привет!\fЗдравствуй!

# Приветствия, зависящие от времен суток.

greeting.morning        = Доброе утро!
greeting.afternoon      = Добрый день!
greeting.evening        = Добрый вечер!
greeting.night          = Привет полуношнику!
greeting.early          = Здравствуй, ранняя пташка!
greeting.newYear        = С наступающим Новым Годом!

#
# Временные промежутки для каждого времени суток указаны в общем файле animals.properties
# Вы можете скопировать и изменить эти свойства для русского языка.
# Можно добавить любые другие промежутки времени. Периоды времени могут пересекаться.
#
# Формат свойств:
#
#  <period>.time.after  = HH:MM
#  <period>.time.before = HH:MM
#  or/and
#  <period>.date.after  = MM-DD
#  <period>.date.before = MM-DD
#  <period>.date.equals = MM-DD
#

newYear.date.after      = 12-20

# Прощания

farewell=\
    Пока!\f\
    Пока, пока!\f\
    Увидимся позже!\f\
    Увидимся!\f\
    До встречи!\f\
    До свидания!\f\
    Хорошего дня!\f\
    Было приятно вас видеть!\f\
    Всего доброго!\f\
    Удачи!

# Уточнения, при неясном ответе пользователя на вопрос Да/Нет.

ask.again=\
    Это было да или нет?\f\
    Пожалуйста введите да или нет.\f\
    Замечательно, но я не понимаю, это да или нет?\f\
    Извините, но вам нужно ввести "да" или "нет".\f\
    Давайте попробуем ещё раз: ди или нет?\f\
    Я не уверен, что понял вас. Это было да или нет?\f\
    Это слишком сложно для меня. Скажите просто да или нет.\f\
    Извените, я должен вас переспросить. Введите да или нет.

# Сообщения о животных

animal.wantLearn   =Я хочу узнать больше о животных.
animal.askFavorite =Кто вам нравиться больше всего?
animal.nice         =\
    Прекрасно!\f\
    Хорошо!\f\
    Замечательно!\f\
    Изумительно!\f\
    Превосходно!\f\
    Чудно!
animal.learnedMuch  =\ Я так много узнал о животных!

# The properties used for method ask("<key>")

animal.prompt       = Введите имя животного:
animal.error        = Укажите название животного без слова Это.

statement.prompt    =\
    Укажите факт с помощью которого можно отличить {0} от {1}:\n\
    Утверждение должно быть фомата: 'Оно/Это ...'.

statement.error     = \
    Примеры правильных утверждений:\n\
    - Это млекопитающее \n\
    - Это травоядное \n\
    - Это хищник \n\
    - Оно имеет рога \n\
    - Оно может летать \n\
    - Оно живёт в лесу \n\
    - Это лучший друг человека

# Игра "Угадай животное"

game.letsPlay       = Давайте играть!
game.think          = Задумайте животное, а я попытаюсь его отгадать.
game.enter          = Нажмите клавишу enter когда будете готовы.
game.win            = Как замечательно было угадать!

game.giveUp         = Я сдаюсь. Какое животное вы задумали?
game.isCorrect      = Это утверждение верно для {0}?
game.learned        = Я узнал следующие факты о животных:
game.distinguish    = Я могу различить этих животных задав вопрос:

game.thanks=\
    Это было весело! \f\
    Было приятно играть с вами! \f\
    Спасибо за игру! \f\
    Спасибо! Было здорово! 

game.again=\
    Хотите сыграть ещё?\f\
    Давайте сыграем ещё раз?\f\
    Не желаете повторить?\f\
    Не желаете сыграть ещё?\f\
    Ещё одну игру?\f\
    Вы хотите сыграть снова?

# Меню программы

# Свойства меню
menu.property.title     =Выберите пункт меню:
menu.property.exit      =Выход
menu.property.error     =Пожалуйста укажите число от 0 до {0}

# Пункты меню
menu.entry.play        =Играть в угадай животное
menu.entry.list        =Список всех животных
menu.entry.search      =Поиск фактов о животном
menu.entry.delete      =Удалить животное из базы
menu.entry.statistics  =Показать статистику
menu.entry.print       =Напечатать дерево знаний

# Сервисы Дерева Знаний

# Список животных
tree.list.animals   = Вот животные, которых я знаю:

# This property is format for printf method
tree.list.printf     =\ - %1$s (%2$d)%n

# Поиск фактов о животном
tree.search.prompt   = Какое животное вы желаете найти?
tree.search.error    = Введите минимум две буквы
tree.search.facts    = Факты о животном "{0}":
tree.search.noFacts  = Мне ничего не известно о животном "{0}".

# Удаление животного из Дерева Знаний
tree.delete.root         = Я не могу удалить единственное животное.
tree.delete.successful   = Животное "{0}" было удалено из базы знаний.
tree.delete.fail         = Животное "{0}" не найденно в моей базе знаний.

# Статистика Дерева Знаний
tree.stats.title       =Статистика по дереву знаний:
tree.stats.root        =- корневая запись              {0}
tree.stats.nodes       =- количество узлов             {0,number,integer}
tree.stats.animals     =- количество животных          {0,number,integer}
tree.stats.statements  =- количество утверждений       {0,number,integer}
tree.stats.height      =- высота дерева                {0,number,integer}
tree.stats.minimum     =- минимальная глубина дерева   {0,number,integer}
tree.stats.average     =- средняя глубина дерева       {0,number,##0.0}
